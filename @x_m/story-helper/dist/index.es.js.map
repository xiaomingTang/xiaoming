{"version":3,"file":"index.es.js","sources":["../src/index.ts"],"sourcesContent":["type OptionsValue = number | string\n\ntype InputArg<T> = {\n  return: T\n  name?: string\n  defaultValue: T\n}\n\ninterface NumberArg {\n  min?: number\n  max?: number\n  step?: number\n}\n\ninterface OptionsArg {\n  options: OptionsValue[]\n}\n\ninterface ArgController {\n  boolean: InputArg<boolean>\n  number: InputArg<number> & NumberArg\n  range: InputArg<[number, number]> & NumberArg\n  object: InputArg<object>\n  radio: InputArg<OptionsValue> & OptionsArg\n  'inline-radio': InputArg<OptionsValue> & OptionsArg\n  select: InputArg<OptionsValue> & OptionsArg\n  check: InputArg<OptionsValue[]> & OptionsArg\n  'inline-check': InputArg<OptionsValue[]> & OptionsArg\n  'multi-select': InputArg<OptionsValue[]> & OptionsArg\n  text: InputArg<string>\n  date: InputArg<string>\n  color: InputArg<string> & {\n    presetsColors?: string[]\n  }\n  file: {\n    return: string[]\n    name?: string\n    accept?: string\n  }\n}\n\ntype ArgItem<T extends keyof ArgController> = {\n  control: T\n} & Omit<ArgController[T], 'return'>\n\nexport interface StoryInputArgs {\n  [key: string]:\n    | ArgItem<'boolean'>\n    | ArgItem<'check'>\n    | ArgItem<'color'>\n    | ArgItem<'date'>\n    | ArgItem<'file'>\n    | ArgItem<'inline-check'>\n    | ArgItem<'inline-radio'>\n    | ArgItem<'multi-select'>\n    | ArgItem<'number'>\n    | ArgItem<'object'>\n    | ArgItem<'radio'>\n    | ArgItem<'range'>\n    | ArgItem<'select'>\n    | ArgItem<'text'>\n}\n\nexport type StoryOutputArgs<T extends StoryInputArgs> = {\n  [key in keyof T]: ArgController[T[key]['control']]['return']\n}\n\nexport function createSBArgs<T extends StoryInputArgs>(args: T): T {\n  return args\n}\n"],"names":["createSBArgs","args"],"mappings":"AAmEO,SAASA,EAAuCC,GAAY;AAC1D,SAAAA;AACT;"}